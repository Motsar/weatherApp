const path = require('path');
const express = require('express');
const hbs = require('hbs');
const geocode = require('./utils/geocode');
const forecast = require('./utils/forecast');



console.log(__dirname);
console.log(path.join(__dirname, '../public'));

const app = express();
const port = process.env.PORT || 3000;

//define paths for express config
const publicDirectoryPath = path.join(__dirname, '../public');
const viewsPath = path.join(__dirname, '../templates/views');
const partialsPath = path.join(__dirname, '../templates/partials');


//Setup handlebars engine and views location
app.set('view engine', 'hbs');
app.set('views', viewsPath);
hbs.registerPartials(partialsPath);

//Setup static directory to serv
app.use(express.static(publicDirectoryPath))


app.get('',(req,res)=>{
    res.render('index', {
        title:'Weather',
        name: 'Martin M천tsar'
    })
})


app.get('/about',(req,res)=>{
    res.render('about', {
        title:'About',
        content: 'This page has been generated by Martin M천tsar to create a node.js application for learning',
        name: 'Martin M천tsar'
    })
})


app.get('/help',(req,res)=>{
    res.render('help', {
        title:'Help',
        content: 'You are visiting a dynamic help page rendered by hbs!',
        name: 'Martin M천tsar'
    })
})

app.get('/help/*',(req,res)=>{
    res.render('404', {
        content: "Help article not found!"
    })
})



app.get('/weather',(req,res)=>{
    let address = req.query.location;
    if(!address)res.status(404).json({"error":'Please provide an address!'});
    geocode(address, (error, {latitude, longitude, location}={})=>{
        if(error)return res.json({"error": error});
        forecast(latitude, longitude, (error, forecastData) => {
            if(error)return res.json({"error": error});
            res.status(200).json({
                "location" : location,
                "forecast" : forecastData
            })
        })
    })
})

app.get('*',(req,res)=>{
    res.render('404', {
        content: "Page Not Found"
    })
})


app.listen(port, ()=>{
    console.log('Server is up and running on port ' + port);
})
